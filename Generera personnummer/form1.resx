<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="exit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>